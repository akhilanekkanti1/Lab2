<<<<<<< Updated upstream
=======
install.packages("repurrrsive")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("repurrrsive")
library(repurrrsive)
library(httr)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("repurrrsive")
library(repurrrsive)
library(httr)
>>>>>>> Stashed changes
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("repurrrsive")
library(repurrrsive)
library(httr)
file <- "https://github.com/datalorax/esvis/raw/master/data/benchmarks.rda"
load(url(file))
head(benchmarks)
benchmarks <- benchmarks %>%
as_tibble() %>%
mutate(wave = case_when(season == "Fall" ~ 0,
season == "Winter" ~ 1,
TRUE ~ 2))
benchmarks
<<<<<<< Updated upstream
benchmarks
modl <- lm(math ~ wave, data = benchmarks)
modl
stu_split <- split(benchmarks, benchmarks$sid)
View(stu_split)
str(stu_split)
View(stu_split)
modl <- lm(math ~ wave, data = stu_split)
modl <- lm(math ~ wave, data = stu_split)
stu_split <- split(benchmarks, benchmarks$sid)
modl <- lm(math ~ wave, data = stu_split)
mods <- map(stu_split, ~lm(math ~ wave, data = .x))
mods
str(mods)
coefs <- map(mods, coef)
coefs[c(1:2, length(coefs))]
coefs <- map(mods, ~coef(.x))
coefs
coefs <- map(coef(mod))
coefs <- map(mods, coef)
coefs
coefs <- map(mods, ~coef(.x))
coefs
slopes <- map(coefs, "wave")
slopes
str(slopes)
slopes <- map_dbl(coefs, "wave")
str(slopes)
slopes
head(slopes)
relation <- tibble(wave = names(slopes),
slope = slopes)
View(relation)
relation <- tibble(student = names(slopes),
slope = slopes)
relation
ggplot(relation, aes(slope)) +
geom_histogram((fill = "seafoamgreen"),
color = "white")
relation <- tibble(year = names(slopes),
slope = slopes)
ggplot(relation, aes(slope)) +
geom_histogram(fill = "cornflowerblue",
color = "white")
ggplot(relation, aes(slope)) +
geom_histogram(fill = "cornflowerblue",
color = "white")
relation <- tibble(student = names(slopes),
slope = slopes)
ggplot(relation, aes(slope)) +
geom_histogram(fill = "cornflowerblue",
color = "white")
slopes <- map_dbl(coefs, "wave")
=======
coefs <- map(mods, ~coef(.x))
str(slopes)
relation <- tibble(student = names(slopes),
slope = slopes,
mean = mean(slope))
ggplot(relation, aes(slope)) +
geom_histogram(fill = "magenta",
color = "white") +
geom_vline(aes(xintercept = mean(slope, na.rm = TRUE))
knitr::opts_chunk$set(echo = TRUE)
coefs <- map(mods, ~coef(.x))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("repurrrsive")
library(repurrrsive)
library(httr)
stu_split <- split(benchmarks, benchmarks$sid)
str(stu_split)
mods <- map(stu_split, ~lm(math ~ wave, data = .x))
str(mods)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("repurrrsive")
library(repurrrsive)
library(httr)
coefs <- map(mods, ~coef(.x))
str(slopes)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("repurrrsive")
library(repurrrsive)
library(httr)
coefs <- map(mods, ~coef(.x))
relation <- tibble(student = names(slopes),
slope = slopes,
mean = mean(slope))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("repurrrsive")
library(repurrrsive)
library(httr)
#coef extracts coefficients for any model
coefs <- map(mods, ~coef(.x))
#OR map(mods, coef)
slopes <- map_dbl(coefs, ("wave"))
>>>>>>> Stashed changes
str(slopes)
relation <- tibble(student = names(slopes),
slope = slopes)
ggplot(relation, aes(slope)) +
<<<<<<< Updated upstream
geom_histogram(fill = "cornflowerblue",
color = "white")
ggplot(relation, aes(slope)) +
geom_histogram(fill = "cornflowerblue",
color = "white") +
geom_vline()
ggplot(relation, aes(slope)) +
geom_histogram(fill = "cornflowerblue",
color = "white") +
geom_vline(aes(xintercept = 0))
ggplot(relation, aes(slope)) +
geom_histogram(fill = "cornflowerblue",
color = "white") +
geom_vline(aes(xintercept = mean(relation$slopes, na.rm = TRUE)))
ggplot(relation, aes(slope)) +
geom_histogram(fill = "cornflowerblue",
color = "white") +
geom_vline(aes(xintercept = mean(relation$slopes, na.rm = TRUE)))
mean(relation$slopes, na.rm = TRUE)
ggplot(relation, aes(slope)) +
geom_histogram(fill = "cornflowerblue",
color = "white") +
geom_vline(aes(xintercept = mean(relation$slope, na.rm = TRUE)))
ggplot(relation, aes(slope)) +
geom_histogram(fill = "cornflowerblue",
color = "white") +
geom_vline(aes(xintercept = mean(slope, na.rm = TRUE)))
install.packages("repurrrsive")
library(repurrrsive)
install.packages("repurrrsive")
ggplot(relation, aes(slope)) +
geom_histogram(fill = "springgreen",
color = "white") +
geom_vline(aes(xintercept = mean(slope, na.rm = TRUE)))
head(sw_films)
length(sw_films)
test <- sw_films
View(test)
sw_films[1]
sw_films[[1]]$characters
length(sw_films[[1]]$characters)
chr_count <- map(sw_films, ~length(.x$characters)
chr_count
chr_count <- map(sw_films, ~length(.x$characters))
chr_count
chr_count <- map_dbl(sw_films, ~length(.x$characters))
chr_count
chr_name <- map_chr(sw_films, "title"))
chr_name
chr_names <- map_chr(sw_films, "title")
tbl <- tibble(Film = chr_names,
Characters = chr_count)
tbl
tbl
tibble(Film = chr_names,
Characters = chr_count)
sw_species
str(sw_species)
hair <- map_chr(sw_species, "hair_colors")
hair
hair <- map_chr(sw_species, "hair_colors", .default = NA_character_)
hair
hair <- map_chr(sw_species, "hair_colors", .default = NA)
hair
hair <- map_chr(sw_species, "hair_colors", .default = NA)
hair
str(sw_species)
str(sw_species)
map(sw_species$hair_colors, ~mutate(.x, hc != "n/a"| "none"))
map(sw_species$hair_colors, ~mutate(.x, hair_colors != "n/a"| "none"))
map(sw_species, ~mutate(.x, hair_colors != "n/a"| "none"))
map(sw_species, ~mutate(.x, hair_colors != "n/a"))
map(sw_species, ~mutate(.x$hair_colors, hair_colors != "n/a"))
map(sw_species, ~mutate(.x$hair_colors, hair_colors != "n/a"))
str(sw_species)
test <- sw_specie
test <- sw_species
View(test)
hr <- map_chr(sw_species, "hair_colors")
hr
species <- map_chr(sw_species, "name")
species
tibble(Species = species,
'Hair Colors' = hr)
tbl2 <-  tibble(Species = species,
'Hair Colors' = hr)
tbl2
View(tbl2)
tbl2 %>% filter("Hair Colors" != "na")
tbl2 %>% filter('Hair Colors' != "n/a" & "none")
tbl2 <- tibble(Species = species,
'Hair Colors' = hr) %>%
filter('Hair Colors' != "n/a")
tbl2 %>% filter
tbl2
tbl2 <- tibble(Species = species,
'Hair Colors' = hr) %>%
filter('Hair Colors' != "n/a" | "none")
tbl2
tbl2 <- tibble(Species = species,
'Hair Colors' = hr) %>%
filter('Hair Colors' != "n/a" & "none")
tbl2 <- tibble(Species = species,
'Hair Colors' = hr) %>%
filter('Hair Colors' != "n/a" | "none")
tbl2 <- tibble(Species = species,
'Hair Colors' = hr) %>%
filter('Hair Colors' != "n/a",
'Hair Colors' != "none",
'Hair Colors' != "unknown")
tbl2
tbl2 <- tibble(Species = species,
'Hair Colors' = hr) %>%
filter('Hair Colors' != "n/a" &
'Hair Colors' != "none" &
'Hair Colors' != "unknown")
tbl2
tbl2 <- tibble(Species = species,
'Hair Colors' = hr) %>%
filter('Hair Colors' != "n/a" &
'Hair Colors' != "none" &
'Hair Colors' != "unknown")
tbl2
tbl2 <- tibble(Species = species,
'Hair Colors' = hr) %>%
filter('Hair Colors' != "n/a" &
'Hair Colors' != "none" &
'Hair Colors' != "unknown")
tbl2
sw_films[[1]]$characters[1]
ability1 <- GET("https://pokeapi.co/api/v2/ability/1") %>%
content("parsed")
library(httr)
str(ability)
str(ability1)
tbl2 <- tibble(Species = species,
'Hair Colors' = hr) %>%
filter('Hair Colors' != "n/a" &
'Hair Colors' != "none" &
'Hair Colors' != "unknown")
tbl2
tbl2 <- tibble(Species = species,
'Hair Colors' = hr) %>%
filter('Hair Colors' != "n/a" &
'Hair Colors' != "none" &
'Hair Colors' != "unknown")
tbl2
View(tbl)
View(tbl2)
length(ability1$name)
length(ability1$pokemon)
abilities <- paste0("https://pokeapi.co/api/v2/ability/", 1:5)
abilities
map(abilities, ~GET(.x) %>%
content("parsed"))
abs <- map(abilities, ~GET(.x) %>%
content("parsed"))
abs
View(abs)
ggplot(relation, aes(slope)) +
geom_histogram(fill = "Seagreen2",
color = "white") +
geom_vline(aes(xintercept = mean(slope, na.rm = TRUE)))
ggplot(relation, aes(slope)) +
geom_histogram(fill = "mediumpurple2",
color = "white") +
geom_vline(aes(xintercept = mean(slope, na.rm = TRUE)))
ggplot(relation, aes(slope)) +
geom_histogram(fill = "mediumpurple",
color = "white") +
geom_vline(aes(xintercept = mean(slope, na.rm = TRUE)))
ggplot(relation, aes(slope)) +
geom_histogram(fill = "orchid",
color = "white") +
geom_vline(aes(xintercept = mean(slope, na.rm = TRUE)))
ggplot(relation, aes(slope)) +
geom_histogram(fill = "slateblue",
color = "white") +
geom_vline(aes(xintercept = mean(slope, na.rm = TRUE)))
ggplot(relation, aes(slope)) +
geom_histogram(fill = "mediumorchi",
color = "white") +
geom_vline(aes(xintercept = mean(slope, na.rm = TRUE)))
ggplot(relation, aes(slope)) +
geom_histogram(fill = "mediumorchid",
color = "white") +
geom_vline(aes(xintercept = mean(slope, na.rm = TRUE)))
benchmarks <- benchmarks %>%
as_tibble() %>%
mutate(wave = case_when(season == "Fall" ~ 0,
season == "Winter" ~ 1,
TRUE ~ 2))
benchmarks
file <- "https://github.com/datalorax/esvis/raw/master/data/benchmarks.rda"
load(url(file))
head(benchmarks)
=======
geom_histogram(fill = "forestgreen",
color = "white") +
geom_vline(aes(xintercept = mean(slope, na.rm = TRUE)))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("repurrrsive")
library(repurrrsive)
library(httr)
install.packages("repurrrsive")
library(repurrrsive)
install.packages("repurrrsive")
length(sw_films)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("repurrrsive")
library(repurrrsive)
library(httr)
length(sw_films)
chr_count <- map_dbl(sw_films, ~length(.x$characters))
chr_names <- map_chr(sw_films, "title")
tibble(Film = chr_names,
Characters = chr_count)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("repurrrsive")
library(repurrrsive)
library(httr)
tibble(Film = chr_names,
Characters = chr_count)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("repurrrsive")
library(repurrrsive)
library(httr)
map_chr(sw_films, "species")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("repurrrsive")
library(repurrrsive)
library(httr)
str(sw_species)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("repurrrsive")
library(repurrrsive)
library(httr)
str(sw_species$hair_color)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("repurrrsive")
library(repurrrsive)
library(httr)
map_chr(sw_films, "species")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("repurrrsive")
library(repurrrsive)
library(httr)
sw_species %>%
filter(hair_color != "n/a")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("repurrrsive")
library(repurrrsive)
library(httr)
map_chr(sw_species, "x")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("repurrrsive")
library(repurrrsive)
library(httr)
map_chr(sw_species$hair_color, "n/a")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("repurrrsive")
library(repurrrsive)
library(httr)
str(sw_species)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("repurrrsive")
library(repurrrsive)
library(httr)
str(sw_species)
hc <- map_chr(sw_species, "hair_colors")
str(hc)
species <- map_chr(sw_species, "name")
str(species)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("repurrrsive")
library(repurrrsive)
library(httr)
tbl2 <- tibble(Species = species,
`Hair Color` = hc) %>%
filter(`Hair Colors` != "n/a" &
`Hair Colors` != "none" &
`Hair Colors` != "unknown")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("repurrrsive")
library(repurrrsive)
library(httr)
tibble(Species = species,
`Hair Color` = hc)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("repurrrsive")
library(repurrrsive)
library(httr)
tbl2 <- tibble(Species = species,
`Hair Color` = hc)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("repurrrsive")
library(repurrrsive)
library(httr)
tbl2 %>%
filter(`Hair Colors` != "n/a" &
`Hair Colors` != "none" &
`Hair Colors` != "unknown")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("repurrrsive")
library(repurrrsive)
library(httr)
tbl2 %>%
filter(`Hair Color` != "n/a" &
`Hair Color` != "none" &
`Hair Color` != "unknown")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("repurrrsive")
library(repurrrsive)
library(httr)
library(httr)
ability1 <- GET("https://pokeapi.co/api/v2/ability/1") %>%
content("parsed")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("repurrrsive")
library(repurrrsive)
library(httr)
ability1$name
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("repurrrsive")
library(repurrrsive)
library(httr)
paste0(https://pokeapi.co/api/v2/ability/, 1:5)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("repurrrsive")
library(repurrrsive)
library(httr)
paste0(https://pokeapi.co/api/v2/ability, 1:5)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("repurrrsive")
library(repurrrsive)
library(httr)
paste0(https://pokeapi.co/api/v2/ability, 1:5)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("repurrrsive")
library(repurrrsive)
library(httr)
paste0("https://pokeapi.co/api/v2/ability/", 1:5)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("repurrrsive")
library(repurrrsive)
library(httr)
abs <- map(abilities, ~GET(.x)) %>%
content("parsed")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("repurrrsive")
library(repurrrsive)
library(httr)
map(abilities, ~GET(.x)) %>%
content("parsed")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("repurrrsive")
library(repurrrsive)
library(httr)
abilities <- paste0("https://pokeapi.co/api/v2/ability/", 1:5)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("repurrrsive")
library(repurrrsive)
library(httr)
abs <- map(abilities, ~GET(.x)) %>%
content("parsed")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("repurrrsive")
library(repurrrsive)
library(httr)
abilities <- paste0("https://pokeapi.co/api/v2/ability/", 1:5)
abs <- map(abilities, ~GET(.x)) %>%
content("parsed")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("repurrrsive")
library(repurrrsive)
library(httr)
map(abilities, ~GET(.x)) %>%
content("parsed")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("repurrrsive")
library(repurrrsive)
library(httr)
abs <- map(abilities, ~GET(.x)) %>%
content("parsed"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("repurrrsive")
library(repurrrsive)
library(httr)
abs <- map(abilities, ~GET(.x) %>%
content("parsed"))
abs
knitr::opts_chunk$set(echo = TRUE)
file <- "https://github.com/datalorax/esvis/raw/master/data/benchmarks.rda"
load(url(file))
head(benchmarks)
library(tidyverse)
>>>>>>> Stashed changes
benchmarks <- benchmarks %>%
as_tibble() %>%
mutate(wave = case_when(season == "Fall" ~ 0,
season == "Winter" ~ 1,
TRUE ~ 2))
<<<<<<< Updated upstream
benchmarks
stu_split <- split(benchmarks, benchmarks$sid)
str(stu_split)
mods <- map(stu_split, ~lm(math ~ wave, data = .x))
mods
coefs <- map(mods, ~coef(.x))
coefs[c(1:2, length(coefs))]
coefs
slopes <- map_dbl(coefs, "wave")
str(slopes)
slopes
head(sw_films)
length(sw_films)
sw_films[[1]]$characters
length(sw_films[[1]]$characters)
chr_count <- map_dbl(sw_films, ~length(.x$characters))
chr_count
chr_names <- map_chr(sw_films, "title")
tibble(Film = chr_names,
Characters = chr_count)
sw_films[[1]]$characters
length(sw_films[[1]]$characters)
chr_count <- map_dbl(sw_films, ~length(.x$characters))
chr_count
chr_names <- map_chr(sw_films, "title")
chr_names
tibble(Film = chr_names,
Characters = chr_count)
str(sw_species)
hr <- map_chr(sw_species, "hair_colors")
hr
species <- map_chr(sw_species, "name")
species
tbl2 <- tibble(Species = species,
'Hair Colors' = hr)
tbl2
test <- tbl2 %>% filter('Hair Colors' != "n/a" &
'Hair Colors' != "none" &
'Hair Colors' != "unknown")
View(test)
test <- tbl2 %>% filter('Hair Colors' != "n/a")
test <- tbl2 %>% filter('Hair Colors' =! "n/a")
test <- tbl2 %>% filter('Hair Colors' != "n/a")
str(tbl2)
test <- tbl2 %>% filter('Hair Colors' != "n/a")
hc <- map_chr(sw_species, "hair_colors")
hc
species <- map_chr(sw_species, "name")
species
tbl2 <- tibble(Species = species,
'Hair Colors' = hc)
test <- tbl2 %>% filter(`Hair Colors` != "n/a")
=======
stu_split <- split(benchmarks, benchmarks$sid)
str(stu_split)
mods <- map(stu_split, ~lm(math ~ wave, data = .x))
str(mods)
#coef extracts coefficients for any model
coefs <- map(mods, ~coef(.x))
#OR map(mods, coef)
slopes <- map_dbl(coefs, ("wave"))
str(slopes)
relation <- tibble(student = names(slopes),
slope = slopes)
ggplot(relation, aes(slope)) +
geom_histogram(fill = "forestgreen",
color = "white") +
geom_vline(aes(xintercept = mean(slope, na.rm = TRUE)))
install.packages("repurrrsive")
library(repurrrsive)
length(sw_films)
chr_count <- map_dbl(sw_films, ~length(.x$characters))
chr_names <- map_chr(sw_films, "title")
tibble(Film = chr_names,
Characters = chr_count)
#a
str(sw_species)
hc <- map_chr(sw_species, "hair_colors")
str(hc)
species <- map_chr(sw_species, "name")
str(species)
>>>>>>> Stashed changes
tbl2 <- tibble(Species = species,
`Hair Colors` = hc) %>%
filter(`Hair Colors` != "n/a" &
`Hair Colors` != "none" &
`Hair Colors` != "unknown")
<<<<<<< Updated upstream
View(test)
tbl2 <- tibble(Species = species,
`Hair Colors` = hc) %>%
filter(`Hair Colors` != "n/a" &
`Hair Colors` != "none" &
`Hair Colors` != "unknown")
tbl2
tibble(Species = species,
`Hair Colors` = hc) %>%
filter(`Hair Colors` != "n/a" &
`Hair Colors` != "none" &
`Hair Colors` != "unknown")
tbl2
stu_split
stu_split[1:3]
str(stu_split)[1:3]
mods
mods <- map(stu_split, ~lm(math ~ wave, data = .x))
mods
names(stu_split)
attributes(stu_split)
map_dbl(sw_films, ~length(characters))
map_dbl(sw_films, ~length("characters"))
map_dbl(sw_films, ~length(.x$characters))
chr_names <- map_chr(sw_films, "title")
map_chr(sw_films, "title")
`Hair Colors` != "unknown")
map(sw_films, "title")
map_chr(sw_films, "title")
test <- map(sw_films, "title")
str(test)
test <- map_chr(sw_films, "title")
str(test)
str(sw_species)
hc <- map_chr(sw_species, "hair_colors")
hc
species <- map_chr(sw_species, "name")
species
=======
tbl2
library(httr)
ability1 <- GET("https://pokeapi.co/api/v2/ability/1") %>%
content("parsed")
str(ability1)
length(ability1$pokemon)
abilities <- paste0("https://pokeapi.co/api/v2/ability/", 1:5)
abs <- map(abilities, ~GET(.x) %>%
content("parsed"))
str(abs)
abs$pokemon
names <- map_chr(abs$pokemon, "name")
names
tbl3 <- tibble(Pokemon = )
install.packages("repurrrsive")
knitr::opts_chunk$set(echo = TRUE)
str(sw_species)
install.packages("repurrrsive")
library(repurrrsive)
length(sw_films)
chr_count <- map_dbl(sw_films, ~length(.x$characters))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#install.packages("repurrrsive")
library(repurrrsive)
library(httr)
length(sw_films)
chr_count <- map_dbl(sw_films, ~length(.x$characters))
chr_names <- map_chr(sw_films, "title")
tibble(Film = chr_names,
Characters = chr_count)
str(sw_species)
hc <- map_chr(sw_species, "hair_colors")
str(hc)
species <- map_chr(sw_species, "name")
str(species)
>>>>>>> Stashed changes
tbl2 <- tibble(Species = species,
`Hair Colors` = hc) %>%
filter(`Hair Colors` != "n/a" &
`Hair Colors` != "none" &
`Hair Colors` != "unknown")
tbl2
<<<<<<< Updated upstream
library(httr)
=======
>>>>>>> Stashed changes
ability1 <- GET("https://pokeapi.co/api/v2/ability/1") %>%
content("parsed")
str(ability1)
length(ability1$pokemon)
<<<<<<< Updated upstream
str(ability1)
View(ability1)
attributes(ability1)
attributes(ability1)
ability1$name
View(ability1)
abilities
abilities <- paste0("https://pokeapi.co/api/v2/ability/", 1:5)
abilities
abs <- map(abilities, ~GET(.x) %>%
content("parsed"))
abs
=======
abilities <- paste0("https://pokeapi.co/api/v2/ability/", 1:5)
abs <- map(abilities, ~GET(.x) %>%
content("parsed"))
str(abs)
abs$pokemon
names <- map_chr(abs$pokemon, "name")
names
tbl3 <- tibble(Pokemon = )
>>>>>>> Stashed changes
